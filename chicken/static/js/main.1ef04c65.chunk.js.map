{"version":3,"sources":["components/menu/menu.component.jsx","components/header/header.component.jsx","components/spinner/spinner.component.jsx","components/about-video/about-video.component.jsx","components/more-videos/more-videos.component.jsx","components/bts/bts.component.jsx","components/more-by/more-by.component.jsx","components/video-extended/video-extended.component.jsx","components/video-extended-container/video-extended-container.component.jsx","components/error-boundary/error-boundary.component.jsx","App.js","serviceWorker.js","index.js","components/video-image/video-image.component.jsx","components/player/player.component.jsx","Client.js"],"names":["AnimatedMenuItem","animated","NavLink","MenuItem","styled","HamburgerMenu","items","menu","useTrail","length","opacity","transform","trail","set","useState","menuOpen","menuOpenSwitch","isOpen","pageWrapId","outerContainerId","width","onStateChange","state","disableAutoFocus","left","className","params","map","props","index","key","style","onClick","to","name","builder","imageUrlBuilder","sanityClient","urlFor","source","image","HeaderContainer","div","LogoContainer","LogoLink","Link","LogoImg","img","Header","withRouter","logo","phone","email","header","setHeader","setClassName","useEffect","match","isExact","fetch","then","forEach","alt","src","window","location","pathname","invertedLogo","url","SpinnerOverlay","SpinnerContainer","Spinner","VideoDescContainer","VideoDesc","p","VideoTitle","h2","About","video","description","VideoContainer","ImageContainer","MoreByP","category","currentVideo","moreVids","setMoreVids","undefined","categoryArray","videoQuery","title","push","clientWork","contentVid","id","BTSWrapper","BTSContainer","BTSImgContainer","BTSImg","BTS","bts","BTSMoreVidCont","MoreByCont","MoreBy","client","clientName","_id","categories","VideoOuterWrapper","VideoInnerWrapper","VideoExtended","setVideo","useParams","videoId","trim","sanityVideo","ErrorImageOverlay","ErrorImageContainer","imageUrl","ErrorImageText","ErrorBoundary","hasErrored","error","info","console","log","this","children","React","Component","HomePage","lazy","AboutPage","ContentPage","App","fallback","path","component","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","VideoItemContainer","VideoLink","VideoTextContainer","VideoImgContainer","VideoItemOverlay","h1","ClientText","VideoImgBackground","VideoImage","home","filtered","scrollTo","height","backgroundImage","thumbnail","quality","Player","frameBorder","allow","vimeoLink","projectId","dataset","token","useCdn"],"mappings":"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","file":"static/js/main.1ef04c65.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport './menu.styles.scss'\nimport { useTrail, animated } from 'react-spring'\nimport { push as Menu } from 'react-burger-menu'\nimport { NavLink } from 'react-router-dom'\nimport Particles from 'react-particles-js'\n\nconst AnimatedMenuItem = animated(NavLink)\n\nconst MenuItem = styled(AnimatedMenuItem)`\n  cursor: pointer;\n  text-decoration: none;\n  color: rgba(255,255,255,0.7);\n  margin: 10px 0;\n  font-size: 32px;\n  transition:color ease-in-out .3s;\n  &:hover {\n    color: rgba(255,255,255,1);\n  }\n`\n\nconst HamburgerMenu = ({ menu }) => {\n  const items = menu\n\n  const [trail, set] = useTrail(items.length, () => ({\n\n    opacity:0,\n    transform: 'translate3D(0,50px,0)',\n\n  }))\n\n    const [menuOpen, menuOpenSwitch] = useState(false)\n\n    const toggleMenu = (state) => {\n      if (state.isOpen) {\n       \n        menuOpenSwitch(true)\n        set({\n        \n          opacity: 1,\n          transform: 'translate3D(0,0,0',\n        })\n      }\n      \n      else {menuOpenSwitch(false)\n        set({\n        \n          opacity: 0,\n          transform: 'translate3D(0,50px,0',\n        })\n       }\n    }\n  \n    return (\n      <Menu isOpen={menuOpen} pageWrapId={ \"page-wrap\" } outerContainerId={ \"outer-container\" } width={ '200px' } onStateChange={toggleMenu} disableAutoFocus left>\n         <Particles className=\"particles\"\n                params={{\n                  \"particles\": {\n                    \"number\":{\n                      \"value\":70,\n                      \n                    },\n                      \"color\":{\n                        \"value\":\"#fd7907\"\n                      },\n                      \"opacity\":{\n                        \"value\":0.8,\n                        \"random\":true,\n                        \"anim\":{\n                          \"enable\":false,\n                          \"speed\":1,\n                          \"opacity_min\":0.1,\n                          \"sync\":false\n                        }\n                      },\n                      \"line_linked\":{\n                        \"enable\":false,\n                        \"distance\":500,\n                        \"color\":\"#ffffff\",\n                        \"opacity\":0.4,\n                        \"width\":1\n                      },\n                      \"polygon\":{\n                        \"nb_sides\":3\n                      },\n                      \"move\":{\n                        \"enable\":true,\n                        \"speed\":6.8,\n                        \"direction\":\"top\",\n                        \"random\":true,\n                        \"straight\":false,\n                        \"out_mode\":\"out\",\n                        \"bounce\":false,\n                        \"attract\":{\n                          \"enable\":false,\n                          \"rotateX\":600,\n                          \"rotateY\":1200\n                        }\n                      }\n                    \n                  }\n              }} />\n        {trail.map((props, index) => (\n           <MenuItem key={items[index]} style={props} onClick={() => menuOpenSwitch(false)} to={items[index].name === 'home' ? '/' : `/${items[index].name}`}>{items[index].name}\n            </MenuItem>\n          )\n        )}\n      </Menu>\n \n      \n    )\n  }\n\n\nexport default HamburgerMenu\n","import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport sanityClient from '../../Client'\nimport HamburgerMenu from '../menu/menu.component'\nimport { Link, withRouter } from 'react-router-dom'\nimport imageUrlBuilder from '@sanity/image-url'\nimport './header.styles.scss'\n\n\nconst builder = imageUrlBuilder(sanityClient)\nfunction urlFor(source) {\n  return builder.image(source)\n}\n\nconst HeaderContainer = styled.div`\n  width: 100%;\n  z-index: 10;\n  top: 0;\n  left: 0;\n  position: absolute;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1% 0 2%;\n  box-sizing: border-box\n  @media screen and (max-width: 1000px) {\n    padding: 0 2% 0 5%\n  }\n  `\n\nconst LogoContainer = styled.div`\n  width: 100px;\n  height: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n `\n\nconst LogoLink = styled(Link)`\n  width: 100%;\n  height: auto;`\n\nconst LogoImg = styled.img`\n  min-width: 100px;\n  max-width: 70%;\n  height: auto;`\n\nconst HeaderComp = (props) => {\n  \n  const [header, setHeader] = useState({ \n    menu: [],\n    logo: '',\n    phone: '',\n    email: ''\n  })\n  const [className, setClassName] = useState(\"home\")\n\n  useEffect(function() {\n    setClassName(props.match.isExact ? \"home\" : \"not-home\")\n  }, [props.match.isExact])\n  useEffect(() => {\n    const headerQuery = `*[_type == \"header\"]`\n    sanityClient.fetch(headerQuery).then(header => {\n\n      header.forEach(header => {\n        setHeader(header)\n      })\n    })\n    return\n  }, [])\n  return (\n\n    <HeaderContainer className={className} {...props}>\n       <HamburgerMenu menu={header.menu}/>\n      <LogoContainer>\n          <LogoLink to='/'><LogoImg alt=\"Logo\" src={window.location.pathname === '/' || window.location.pathname === '/home' ? urlFor(header.invertedLogo).width(500).url() : urlFor(header.logo).width(500).url()}/></LogoLink>\n      </LogoContainer>\n    </HeaderContainer>\n  )\n}\n\n\nconst Header = withRouter(HeaderComp)\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`\n\nconst Spinner = () => (\n    <SpinnerOverlay>\n        <SpinnerContainer />\n    </SpinnerOverlay>\n)\n\nexport default Spinner","import React from 'react'\nimport styled from 'styled-components'\n\nconst VideoDescContainer = styled.div`\n  text-align: left;\n  width: 75%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: column;`\n  const VideoDesc = styled.p`\n\n  `  \n  const VideoTitle = styled.h2`\n  margin: 5px 0;\n  @media screen and (max-width: 1000px) {\n    font-size: 18px\n  }`\n\nconst About = ({video}) => {\n    return (\n        <VideoDescContainer>   \n                <VideoTitle>About</VideoTitle>\n                 <VideoDesc>{video.description}</VideoDesc>\n             </VideoDescContainer>\n    )\n}\n\nexport default About\n","import React, {useState, useEffect} from 'react'\nimport sanityClient from '../../Client'\nimport styled from 'styled-components'\nimport VideoImage from '../video-image/video-image.component'\nimport { withRouter } from 'react-router-dom'\n\nconst VideoContainer = styled.div`\n  display: grid;\n  grid-template-columns:1fr 1fr 1fr;\n  width: 100%;\n  grid-gap: 15px;\n  @media screen and (max-width: 1200px) {\n    grid-template-columns:1fr 1fr;\n    width: 100%%;\n  }\n  @media screen and (max-width: 1000px) {\n    grid-template-columns:1fr;\n    width: 90%;\n    margin-left: 5%;\n  }\n `\nconst ImageContainer = styled.div`\n  width: 100%;\n  height: 250px;\n  @media screen and (max-width: 1000px) {\n    height: 200px;\n  }\n `\nconst MoreByP = styled.p`\n  margin: 25px 0;`\n \n\nconst MoreVids = ( {category, currentVideo} ) => {\n  \n    const [moreVids, setMoreVids] = useState([])\n    useEffect(() => {\n        if(category !== undefined) {\n            const categoryArray = []\n            const videoQuery = `*[_type == \"video\" && references('${category}')]{\n                title, thumbnail, client[]->{_id, clientName} }\n              `\n              sanityClient.fetch(videoQuery).then(video => {\n                video.forEach(video => {\n                  if(currentVideo.title !== video.title) {\n                    categoryArray.push(video)\n                  }\n                   \n                  \n                   \n                  \n                })\n                setMoreVids(categoryArray)\n              })\n        } else {\n           return null\n        }\n        return\n      }, [category, currentVideo]) \n     \n    return (\n        moreVids.length > 0 ? \n        <div>\n         { currentVideo.clientWork ? null : <MoreByP>More Like This</MoreByP>}\n           <VideoContainer>\n          \n          {\n                moreVids.map((contentVid, id) =>\n                <ImageContainer key={id}>\n                   <VideoImage video={contentVid} />\n                </ImageContainer>\n                )\n              }\n          </VideoContainer>\n          \n        </div>\n       \n       \n        : null\n    )\n}\n\nexport default withRouter(MoreVids)\n","import React from 'react'\nimport styled from 'styled-components'\nimport sanityClient from '../../Client'\nimport imageUrlBuilder from '@sanity/image-url'\n\nconst builder = imageUrlBuilder(sanityClient)\nfunction urlFor(source) {\n  return builder.image(source)\n}\n\nconst BTSWrapper = styled.div`\n  align-self: center;\n  width: 70%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: wrap column;\n  height: auto;\n`\n\nconst BTSContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 2%;\n  @media screen and (max-width: 1000px) {\n    grid-template-columns: 1fr;\n    width: 90%;\n    margin-left: 5%;\n  }`  \n\nconst BTSImgContainer = styled.div`\n  min-width: 100%;`\n\nconst BTSImg = styled.img`\n  max-width: 100%;`\n\nconst BTS = ( {video} ) => (\n    <BTSWrapper>\n               \n           {video.bts !== undefined ? <BTSContainer>\n            <h2>\n                 Behind the Scenes\n               </h2>\n            {video.bts.map((bts, id) => {\n              return (\n               <BTSImgContainer key={id}><BTSImg alt=\"BTS\" src={urlFor(bts).url()} /></BTSImgContainer> \n              )\n            })}\n           </BTSContainer> :\n            null}\n          </BTSWrapper>\n)\n\nexport default BTS","import React from 'react'\nimport styled from 'styled-components'\nimport MoreVids from '../more-videos/more-videos.component'\nimport BTS from '../bts/bts.component'\n\n\nconst BTSMoreVidCont = styled.div`\n  width: 100%;\n ;`\n const MoreByCont = styled.div`\n width: 100%;\n height: auto`\n\n const MoreByP = styled.p`\n  margin: 25px 0;`\n\nconst MoreBy = ({video}) => {\n\n    return (\n        <MoreByCont>\n        { video.clientWork ? <div>\n          {video.client.map((client, id) => {\n                    return( <MoreByP key={id}> More By {client.clientName} </MoreByP>)\n                  })}\n                    <MoreVids currentVideo={video} category={video.client[0]._id}/> \n        </div>\n\n          : <BTSMoreVidCont>\n            <BTS video={video} />\n            {video.categories ? <div>\n              <MoreVids currentVideo={video} category={video.categories[0]._id}/> \n            </div> : null}\n            \n          </BTSMoreVidCont> \n          }\n       </MoreByCont>\n    )\n}\n\nexport default MoreBy\n","import React from 'react'\nimport styled from 'styled-components'\nimport Player from '../player/player.component'\nimport Spinner from '../spinner/spinner.component'\nimport About from '../about-video/about-video.component'\nimport MoreBy from '../more-by/more-by.component'\n\nconst VideoOuterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: column wrap;\n  margin-bottom: 100px`\n\nconst VideoInnerWrapper = styled.div`\n display: flex;\n justify-content: center;\n align-items: center;\n flex-flow: column;\n margin-top: 80px;\n min-width: 80%;\n @media screen and (max-width: 1000px) {\n   min-width: 90%;\n }`\n\n\nconst VideoTitle = styled.h2`\n  margin: 5px 0 0 0;\n  @media screen and (max-width: 1000px) {\n    font-size: 18px\n  }`\n\n\nconst VideoDesc = styled.p`\n  margin: 0 0 25px 0;\n  `  \n\n\n\nconst VideoExtended = ({video}) => {\n\n  return (\n    video.length <= 0 || video === 'noVid' ? \n    <div>\n      \n      <Spinner></Spinner>\n      {video === 'noVid' ? <VideoTitle>Video Not Found :(</VideoTitle> : null}\n     \n    </div> :\n      <VideoOuterWrapper>\n             <VideoInnerWrapper>\n             <VideoTitle>{video.title}</VideoTitle>\n                 {video.client ?\n                   video.client.map((client, id) => {\n                     return( <VideoDesc key={id}> {client.clientName} </VideoDesc>)\n                   }): null}\n             <Player video={video}/>\n            <MoreBy video={video}/>\n             {video.description ? \n             <About video={video} />\n             : null}\n           </VideoInnerWrapper>\n       </VideoOuterWrapper>\n  )\n}\n\n\nexport default VideoExtended\n","import React, {useState, useEffect} from 'react'\nimport { useParams, withRouter } from 'react-router-dom'\nimport VideoExtended from '../video-extended/video-extended.component'\nimport Spinner from '../spinner/spinner.component'\nimport sanityClient from '../../Client'\n\nconst VideoContainer = () => {\n    const [video, setVideo] = useState()\n    let id = useParams()\n    \n    useEffect(() => {\n      \n      const videoQuery = `*[_type == \"video\" && title == \"${id.videoId.trim()}\"]{date, description,categories[]->{_id, category}, clientWork, title, vimeoLink, bts, client[]->{_id, clientName}}\n      `\n      \n      sanityClient.fetch(videoQuery).then(sanityVideo => {\n       if(sanityVideo.length <= 0)  {\n        setVideo('noVid')\n        }\n        setVideo(sanityVideo[0])\n      })\n      return function cleanUp() {\n          setVideo()\n      }\n    }, [id]) \n   \n    return (\n        !video ?  <Spinner></Spinner> :\n        <VideoExtended video={video} />\n    )\n}\n\nexport default withRouter(VideoContainer)\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const ErrorImageOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const ErrorImageContainer = styled.div`\n  display: inline-block;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n  background-size: cover;\n  background-position: center;\n  width: 40vh;\n  height: 40vh;\n  margin-top: 50px;\n`\n\nexport const ErrorImageText = styled.h2`\n  font-size: 28px;\n  color: #2f8e89;\n  width: 80%;\n`\n\nclass ErrorBoundary extends React.Component {\n\n    constructor() {\n        super()\n\n        this.state = {\n            hasErrored: false\n        }\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasErrored: true }\n    }\n\n    componentDidCatch(error, info) {\n        console.log(error, info)\n    }\n\n    render() {\n        if (this.state.hasErrored) {\n            return (\n                <ErrorImageOverlay>\n                    <ErrorImageContainer imageUrl=\"https://i.imgur.com/A040Lxr.png\" />\n                    <ErrorImageText>Houston, the page got lost in space... Something went wrong, try reloading the page or go to another page and refresh. :(</ErrorImageText>\n                </ErrorImageOverlay>\n                )\n        }\n        else {\n            return this.props.children\n        }\n        \n    }\n\n}\n\nexport default ErrorBoundary","import React, { lazy, Suspense } from 'react'\nimport { Route, Switch} from 'react-router-dom'\nimport './App.css'\nimport Header from './components/header/header.component'\nimport Spinner from './components/spinner/spinner.component'\nimport VideoContainer from './components/video-extended-container/video-extended-container.component'\nimport ErrorBoundary from './components/error-boundary/error-boundary.component'\n\nconst HomePage = lazy(() => import('./pages/home/home.component'))\nconst AboutPage = lazy(() => import('./pages/about/about.component'))\nconst ContentPage = lazy(() => import('./pages/content/content.component'))\n\nconst App = () => {\n   \n      return (\n       \n          <div id=\"outer-container\" className=\"App\">\n            <Header />\n            <div id=\"page-wrap\">\n            <Switch >\n            <ErrorBoundary>\n                <Suspense fallback={<Spinner/>}>\n                \n                  <Route\n                    path={'/'}\n                    component={HomePage}\n                    exact/>\n                  <Route\n                    path={'/about'}\n                    component={AboutPage}/>\n                  <Route exact\n                    path={'/content'}\n                    component={ContentPage}/>\n                    <Switch>\n                    <Route path={`/content/:videoId`} children={VideoContainer}\n                  />\n                    </Switch>\n                  \n                  <Route\n                    path={'/home'}\n                    component={HomePage}/>\n                </Suspense>  \n                </ErrorBoundary>\n            </Switch>\n            </div>\n            \n          </div>\n         \n       )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport sanityClient from '../../Client'\nimport imageUrlBuilder from '@sanity/image-url'\nimport './video-image.styles.scss'\n\nconst builder = imageUrlBuilder(sanityClient)\nfunction urlFor(source) {\n  return builder.image(source)\n}\n\n\n\nconst VideoItemContainer = styled.div`\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transition: all .2s ease-in-out;\n  \n  `\n\nconst VideoLink = styled(Link)`\n  height: 100%;\n  width: 100%;\n  color: white;\n  text-decoration: none;\n  position: relative;\n`   \n\n\nconst VideoTextContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 0;\n    left: 0;\n    flex-flow: column;\n    z-index: 2; \n    \n    * {\n        margin: 0;\n    }`  \n\n\nconst VideoImgContainer = styled.div`\n    position: relative;\n    height: 100%;\n    width: 100%;\n    cursor: pointer;\n  `\nconst VideoItemOverlay = styled.div`\n    position: absolute;\n    z-index: 1;\n    width: 100%;\n    height: 100%;\n    background: rgba(0,0,0,0.3);\n`\nconst VideoTitle = styled.h1`\n\n`\nconst ClientText = styled.p`\n`\n\nconst VideoImgBackground = styled.div`\n    height: 100vh;\n    width: 100%;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;`\n\n\n\nconst VideoImage = ({ video, home, filtered }) => {\n  return (\n    <VideoLink onClick={() => window.scrollTo(0, 0)} to={{\n      pathname:`/content/${video.title}`\n    }}>\n          \n            <VideoItemContainer className={!home ? 'hover' : null} >\n          \n              <VideoItemOverlay />\n              <VideoImgContainer>  \n                <VideoImgBackground style={!home ? {height: '100%', backgroundImage:`url(${urlFor(video.thumbnail).quality(60).url()})`} : {height: '100vh', backgroundImage:`url(${urlFor(video.thumbnail).quality(70).url()})`}} />      \n                  <VideoTextContainer>\n                  \n\n    {video.clientWork && !filtered ? null : <VideoTitle>{video.title}</VideoTitle>}\n                        \n                        {video.client ? video.client.map((client, id) => {\n                              return( !video.clientWork ? <ClientText key={id}>{client.clientName}</ClientText> : \n                                filtered ? <ClientText key={id}>{client.clientName} </ClientText> : <VideoTitle key={id}>{client.clientName }</VideoTitle>)\n                              }): null}\n                  </VideoTextContainer>\n             \n              </VideoImgContainer>\n\n            </VideoItemContainer>\n            </VideoLink>\n  )\n}\nexport default VideoImage\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst VideoContainer = styled.div`\n  min-width: 100%;\n  padding:52.73% 0 0 0;\n  position:relative;\n  iframe {\n    position:absolute;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n\n  }`\nconst Player = ({video}) => {\n    return (\n        <VideoContainer>\n                 <iframe title={video.title} frameBorder=\"0\" allow=\"autoplay\" \n                 src={`https://player.vimeo.com/video/${video.vimeoLink}?color=9f00ef&byline=0&portrait=0`}>\n\n                 </iframe>\n                 <script src=\"https://player.vimeo.com/api/player.js\"></script>  \n             </VideoContainer>\n    )\n}\n\nexport default Player\n","import sanityClient from '@sanity/client'\n\n\nexport default sanityClient({\n  projectId: '56tmjwkw',\n  dataset: 'production',\n  token: '', // or leave blank to be anonymous user\n  useCdn: true // `false` if you want to ensure fresh data\n})\n"],"sourceRoot":""}