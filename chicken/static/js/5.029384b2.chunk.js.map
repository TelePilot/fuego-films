{"version":3,"sources":["pages/content/content.component.jsx"],"names":["ContentContainer","styled","div","ContentTitle","h1","VideoContainer","ImageContainer","CatCont","CatButton","button","Content","useState","category","setCategory","videoArray","setVideoArray","ogArray","setOgArray","allArray","setAllArray","isFiltered","setIsFiltered","useEffect","catArray","sanityClient","fetch","then","cat","forEach","push","video","length","clientWork","undefined","client","filter","e","clientName","filteredVideos","map","id","key","onClick","toLowerCase","v","categories","every","c","contentVid","filtered"],"mappings":"s4DAMA,IAAMA,EAAmBC,IAAOC,IAAV,KAQhBC,EAAeF,IAAOG,GAAV,KAKZC,EAAiBJ,IAAOC,IAAV,KAcdI,EAAiBL,IAAOC,IAAV,KAUZK,EAAUN,IAAOC,IAAV,KAcTM,EAAYP,IAAOQ,OAAV,KAmJAC,UA9HC,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACbC,EADa,KACHC,EADG,OAEgBF,mBAAS,IAFzB,mBAEbG,EAFa,KAEDC,EAFC,OAGUJ,mBAAS,IAHnB,mBAGbK,EAHa,KAGJC,EAHI,OAIYN,mBAAS,IAJrB,mBAIbO,EAJa,KAIHC,EAJG,OAKgBR,oBAAS,GALzB,mBAKbS,EALa,KAKDC,EALC,KAOfC,qBAAU,WACN,IAAMC,EAAW,GAKrBC,IAAaC,MAJE,2FAIcC,MAAK,SAAAC,GACjCA,EAAIC,SAAQ,SAAAD,GACRJ,EAASM,KAAKF,MAElBd,EAAYU,QAET,IAGTD,qBAAU,WAIRE,IAAaC,MAHG,gJAGeC,MAAK,SAAAI,GAClC,IAAMhB,EAAa,GACbI,EAAW,GAEjBY,EAAMF,SAAQ,SAAAE,GACZZ,EAASW,KAAKC,GACThB,EAAWiB,QAAU,EAEtBjB,EAAWe,KAAKC,GAEVA,EAAME,iBAA+BC,IAAjBH,EAAMI,OAGhCpB,EAAWqB,QAAO,SAAAC,GAAC,OAAIA,EAAEJ,iBAA2BC,IAAbG,EAAEF,YAItCpB,EAAWqB,QAAO,SAAAC,GAAC,OAAIA,EAAEJ,YAAcI,EAAEF,OAAO,GAAGG,aAAeP,EAAMI,OAAO,GAAGG,cAAYN,OAAS,GAO1GjB,EAAWe,KAAKC,IAMhBhB,EAAWe,KAAKC,MAKtBX,EAAYD,GACZD,EAAWH,GACXC,EAAcD,QAGf,IAEH,IAAIwB,EAAiB,GAuBnB,OACE,kBAACtC,EAAD,KAEE,kBAACG,EAAD,0BACA,kBAACI,EAAD,KACKK,EAAS2B,KAAI,SAACZ,EAAKa,GACjB,OAAO,kBAAChC,EAAD,CAAWiC,IAAKD,EAAIE,QAAS,YA5BjD,SAAgBf,GACd,GAAyB,QAAtBA,EAAIgB,cAGL,OAFA5B,EAAcC,QACdK,GAAc,IAGfiB,EAAiBpB,EAASiB,QAAO,SAAAS,GAC/B,YAAoBX,IAAjBW,EAAEC,WACCD,EAAEC,WAAWC,OAAM,SAAAC,GAAC,OAAIpB,IAAQoB,EAAEnC,YAEjC,SAEOmB,OAAS,GAE1BV,GAAc,GACdN,EAAcuB,KAEdjB,GAAc,GACdN,EAAcC,IAUwCmB,CAAOR,EAAIf,YAAae,EAAIf,cAG5EQ,EACD,kBAACf,EAAD,KAEMS,EAAWyB,KAAI,SAACS,EAAYR,GAAb,OACf,kBAAClC,EAAD,CAAgBmC,IAAKD,GAClB,kBAAC,IAAD,CAAYS,UAAU,EAAMnB,MAAOkB,SAM7C,kBAAC3C,EAAD,KAEMS,EAAWyB,KAAI,SAACS,EAAYR,GAAb,OACf,kBAAClC,EAAD,CAAgBmC,IAAKD,GAClB,kBAAC,IAAD,CAAYS,UAAU,EAAOnB,MAAOkB","file":"static/js/5.029384b2.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport sanityClient from '../../Client'\nimport VideoImage from '../../components/video-image/video-image.component'\n\n\nconst ContentContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: column;\n  margin-bottom: 50px;\n  `\nconst ContentTitle = styled.h1`\nmargin-top: 80px;\n@media screen and (max-width: 1000px) {\n  font-size: 18px\n}`\nconst VideoContainer = styled.div`\n  display: grid;\n  grid-template-columns:1fr 1fr 1fr;\n  width: 85%;\n  grid-gap: 15px;\n  @media screen and (max-width: 1200px) {\n    grid-template-columns:1fr 1fr;\n    width: 85%;\n  }\n  @media screen and (max-width: 1000px) {\n    grid-template-columns:1fr;\n    width: 95%;\n  }\n `\nconst ImageContainer = styled.div`\n  width: 100%;\n  height: 250px;\n  @media screen and (max-width: 1000px) {\n    height: 200px;\n    width: 90%;\n    margin-left: 5%;\n  }\n `\n\n  const CatCont = styled.div`\n  width: 85%;\n  height: auto;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  @media screen and (max-width: 1000px) { \n    width: 85%;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n    margin-bottom: 5px;\n  }\n  \n`\nconst CatButton = styled.button`\n  cursor: pointer;\n  border-radius: 20px;\n  background: rgba(230,230,255,0.2);\n  \n  color: rgba(0,0,0,0.5);\n  padding: 5px 15px;\n  font-size:12px;\n  border: none;\n  margin: 2% 5px;\n  transition: all ease-in-out .2s;\n  &:hover {\n   background: #800020;\n   color: rgba(255,255,255,0.8) ;\n  }\n  @media screen and (max-width: 1000px) {\n    font-size: 10px;\n    padding: 5px 5px;\n    \n  }` \n\nconst Content = () => {\n  const [category, setCategory] = useState([])\n  const [videoArray, setVideoArray] = useState([])\n  const [ogArray, setOgArray] = useState([])\n  const [allArray, setAllArray] = useState([])\n  const [isFiltered, setIsFiltered] = useState(false)\n\n       useEffect(() =>  {\n           const catArray = []\n        const catQuery = `*[_type == \"categories\"] | order(date desc){\n            category\n        }\n        `\n       sanityClient.fetch(catQuery).then(cat => {\n        cat.forEach(cat => {\n            catArray.push(cat)\n        })\n        setCategory(catArray)\n    })\n  return}, [])\n  \n\n  useEffect(() =>  {\n    const videoQuery = `*[_type == \"video\"] | order(date desc){\n    _id, clientWork, title, thumbnail, client[]->{clientName, _id}, categories[]->{category}}\n    `\n    sanityClient.fetch(videoQuery).then(video => {\n      const videoArray = []\n      const allArray = []\n    \n      video.forEach(video => {\n        allArray.push(video)\n          if(videoArray.length <= 0) {\n          \n            videoArray.push(video)\n          }\n         else if (video.clientWork && video.client !== undefined) {\n           \n           if(\n            videoArray.filter(e => e.clientWork && e.client !== undefined)\n           ) {\n  \n           \n            if(videoArray.filter(e => e.clientWork && e.client[0].clientName === video.client[0].clientName).length > 0) {\n             \n            //  videoArray.splice(videoArray.filter(e => e.client[0].clientName === video.client[0].clientName), 1, video)\n           \n            }\n           else {\n            \n            videoArray.push(video)\n           }\n           }\n          }\n          else {\n           \n            videoArray.push(video)\n          }\n\n      }\n      )\n      setAllArray(allArray)\n      setOgArray(videoArray)\n      setVideoArray(videoArray)\n    })\n    return\n  }, [])\n\n  let filteredVideos = []\n  function filter(cat) {\n    if(cat.toLowerCase() === 'all') {\n      setVideoArray(ogArray)\n      setIsFiltered(false)\n      return\n    }\n     filteredVideos = allArray.filter(v => {\n       if(v.categories !== undefined) {\n      return v.categories.every(c => cat === c.category)\n       }\n       return null\n  })\n  if (filteredVideos.length > 0) {\n   \n    setIsFiltered(true)\n    setVideoArray(filteredVideos)\n  } else {\n    setIsFiltered(false)\n    setVideoArray(ogArray)\n  }}\n\n\n    return (\n      <ContentContainer>\n       \n        <ContentTitle>Share The Vision.</ContentTitle>\n        <CatCont>\n            {category.map((cat, id) => {\n               return <CatButton key={id} onClick={() => {filter(cat.category)}}>{cat.category}</CatButton>\n            })}\n        </CatCont>\n        { isFiltered ?\n         <VideoContainer>\n         {\n               videoArray.map((contentVid, id) =>\n               <ImageContainer key={id}>\n                  <VideoImage filtered={true} video={contentVid} />\n               </ImageContainer>\n               )\n             }\n         </VideoContainer>\n        :\n        <VideoContainer>\n        {\n              videoArray.map((contentVid, id) =>\n              <ImageContainer key={id}>\n                 <VideoImage filtered={false} video={contentVid} />\n              </ImageContainer>\n              )\n            }\n        </VideoContainer>}\n      </ContentContainer>\n\n    )\n  }\n\n\nexport default Content\n"],"sourceRoot":""}